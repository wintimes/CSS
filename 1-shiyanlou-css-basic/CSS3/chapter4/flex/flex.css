.container {
    display: flex;
    justify-content: center;
    width: 600px;
    height: 200px;
    background-color: lightgreen;
      }
.item {
    background-color: lightcoral;
    width: 100px;
    height: 100px;
    margin:10px;
      }
/* 当 flex-grow 的值大于 1，
则按照各自所占的比例分配剩余空间。
例如 A 元素的 flex-grow = 1 ，B 元素的 flex-grow = 2 ，
则 A 分配到 1/3 的剩余空间，即 1/3 \* 200px ，B 元素同理。 */
.item1{
    flex-grow: 3;
}
.item2 {
    flex-grow: 6;
}
.item3 {
    flex-grow: 1;
}
.container1 {
    display: flex;
    justify-content: center;
    width: 300px;
    height: 200px;
    background-color: lightgreen;
      }
.itema {
    background-color: lightcoral;
    width: 200px;
    height: 100px;
    margin:10px;
      }

/* 当 flex-shrink 的大于 1 ，子元素会按照给定的比例缩小自身的大小。
例如 A 的 flex-shrink 设置为 2 ，B 的 flex-shrink 设置为 3 ，
则 A 的宽度 = （200-100*（200*2/（200*2+200*3）））= 160 。B 元素也同理。 */
.itema1{
    flex-shrink: 13;
}
.itema2 {
    flex-shrink: 1;
}
.itema3 {
    flex-shrink: 1;
}
.container2 {
    display: flex;
    justify-content: center;
    width: 400px;
    height: 200px;
    background-color: lightgreen;
      }
 /* 我们将子元素的宽度设置为 auto ，
    flex-basis 也设置为 auto ，布局就会根据子元素的内容进行调整适配。 */
.itemb {
    background-color: lightcoral;
    flex-basis: auto;
    width: auto;
    height: 100px;
    margin:10px;
}
.container4 {
    display: flex;
    flex-wrap: wrap;
    align-content: center;
    width: 400px;
    height: 250px;
    background-color: lightgreen;
      }
.itemc {
    background-color: lightcoral;
    width: 100px;
    height: 100px;
    margin:10px;
      }
/* 当 flex 取一个非负数字，
则将其视为 flex-grow 的值，flex-shrink 取默认值，flex-basis 取 0%。
当 flex 取一个长度或百分比，
则将其视为 flex-basis 的值，flex-grow 和 flex-shrink 都取 1 。
 当 flex 取两个非负数字，
 则分别将其视为 flex-grow和 flex-shrink 的值，flex-basis 取 0%。 */
.itemc1{
    flex: 3;
}
.itemc2 {
    flex: 1;
}
.itemc3 {
    flex: 1;
}
